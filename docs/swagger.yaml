basePath: /api/v1
definitions:
  middleware.Login:
    properties:
      captcha:
        type: string
      device_uuid:
        type: string
      login:
        type: string
      otp:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  middleware.ResponseStruct:
    properties:
      access_expire:
        type: string
      access_token:
        type: string
      refresh_expire:
        type: string
      refresh_token:
        type: string
      user_id:
        type: string
    type: object
  response.PaginatedResponse:
    properties:
      data: {}
      message:
        type: string
      pagination:
        $ref: '#/definitions/response.Pagination'
      success:
        type: boolean
    type: object
  response.Pagination:
    properties:
      current_page:
        type: integer
      total_pages:
        type: integer
      total_rows:
        type: integer
    type: object
  response.ResponseModel:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8000
info:
  contact:
    email: isfandiyor.zabirov.sh@gmail.com
    name: Isfandiyor Zabirov
    url: http://www.swagger.io/support
  description: Welcome to family budget API.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Family Budget API
  version: "1.0"
paths:
  /api/v1/financial_event_categories:
    get:
      description: Возвращает постраничный список категорий, принадлежащих семье пользователя
      operationId: get-financial-event-category-list
      parameters:
      - default: 1
        description: Номер страницы
        in: query
        name: page
        type: integer
      - default: 10
        description: Количество элементов на странице
        in: query
        name: limit
        type: integer
      - description: Текст для поиска по названию и описанию
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PaginatedResponse'
        "400":
          description: Неверные параметры запроса
          schema:
            $ref: '#/definitions/response.ResponseModel'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/response.ResponseModel'
      security:
      - JWT: []
      summary: Получение списка категорий финансовых событий
      tags:
      - Категории финансовых событий
    post:
      operationId: create-financial-event-category
      parameters:
      - description: Название категории
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: Описание категории
        in: body
        name: description
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResponseModel'
      security:
      - JWT: []
      summary: Создание категории финансовых событии
      tags:
      - Категории финансовых событий
    put:
      operationId: update-financial-event-category
      parameters:
      - description: Название категории
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: Описание категории
        in: body
        name: description
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResponseModel'
      security:
      - JWT: []
      summary: Изменение категории финансовых событии
      tags:
      - Категории финансовых событий
  /api/v1/financial_event_categories/{id}:
    delete:
      description: Удаляет категорию по её ID
      operationId: delete-financial-event-category
      parameters:
      - description: ID категории для удаления
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseModel'
        "400":
          description: Неверный формат ID
          schema:
            $ref: '#/definitions/response.ResponseModel'
        "404":
          description: Категория не найдена
          schema:
            $ref: '#/definitions/response.ResponseModel'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/response.ResponseModel'
      security:
      - JWT: []
      summary: Удаление категории финансовых событий
      tags:
      - Категории финансовых событий
    get:
      description: Получения категории по её ID
      operationId: get-financial-event-category
      parameters:
      - description: ID категории для получения
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseModel'
        "400":
          description: Неверный формат ID
          schema:
            $ref: '#/definitions/response.ResponseModel'
        "404":
          description: Категория не найдена
          schema:
            $ref: '#/definitions/response.ResponseModel'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/response.ResponseModel'
      security:
      - JWT: []
      summary: Получения категории финансовых событий
      tags:
      - Категории финансовых событий
  /api/v1/get_me:
    get:
      operationId: get-me
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResponseModel'
      security:
      - JWT: []
      summary: Получение данные текущего пользователя
      tags:
      - Пользователи
  /api/v1/register:
    post:
      operationId: register
      parameters:
      - description: Имя
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: Фамилия
        in: body
        name: surname
        required: true
        schema:
          type: string
      - description: Отчетсво
        in: body
        name: middle_name
        schema:
          type: string
      - description: Номер телефона
        in: body
        name: phone
        schema:
          type: string
      - description: Электронная почта
        in: body
        name: email
        schema:
          type: string
      - description: Логин
        in: body
        name: login
        required: true
        schema:
          type: string
      - description: Пароль
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: Название семейство
        in: body
        name: family_name
        required: true
        schema:
          type: string
      - description: Номер домашнего телефона
        in: body
        name: home_phone
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResponseModel'
      security:
      - JWT: []
      summary: Регистарция новых семей
      tags:
      - Регистрация
  /visor/login:
    post:
      operationId: authorize-user
      parameters:
      - description: Даные для авторизации
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/middleware.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.ResponseStruct'
        "400":
          description: reason
          schema:
            type: string
        "401":
          description: reason
          schema:
            type: string
        "402":
          description: reason
          schema:
            type: string
      summary: Авторизация пользователя
      tags:
      - Регистрация и Авторизация
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
